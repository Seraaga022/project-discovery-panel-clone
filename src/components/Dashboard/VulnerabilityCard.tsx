import { Box, Button, Typography } from "@mui/material";
import { RiEditCircleLine } from "react-icons/ri";
import type { VulnerabilityCardT } from "@appTypes/types/vulnerabilityCard";
import CustomTooltip from "../atoms/CustomTooltip";
import { motion } from "framer-motion";
import getUniqueKey from "../../utils/lib/getUniqueKey";

type DefaultLevelChipStylesT = {
  bgcolor: string;
  color: string;
  borderColor: string;
  blurEffectBgColor: string;
  cvssChipStyles: {
    color: string;
    bgcolor: string;
    dividerBgColor: string;
  };
};

const VulnerabilityCard: React.FC<VulnerabilityCardT> = ({
  level,
  mainTag,
  title,
  tags,
  description,
  time,
  auther,
  index,
  length,
}) => {
  const levelChipStyles = (): DefaultLevelChipStylesT => {
    switch (level) {
      case "medium":
        return {
          bgcolor: "rgba(245,158,11,.2)",
          color: "rgb(234 179 8/1)",
          borderColor: "rgba(252,211,77,.1)",
          blurEffectBgColor: "rgb(234 179 8/1)",
          cvssChipStyles: {
            color: "rgb(251 191 36/1)",
            bgcolor: "rgba(245,158,11,.2)",
            dividerBgColor: "rgb(234 179 8/1)",
          },
        };
      case "high":
        return {
          bgcolor: "rgba(249,115,22,.2)",
          color: "rgb(234 88 12/1)",
          borderColor: "hsla(31,97%,72%,.1)",
          blurEffectBgColor: "rgb(234 88 12/1)",
          cvssChipStyles: {
            color: "rgb(251 146 60/1)",
            bgcolor: "rgba(249,115,22,.2)",
            dividerBgColor: "rgb(234 88 12/1)",
          },
        };
      case "critical":
        return {
          bgcolor: "#321017",
          color: "rgb(225 29 72/1)",
          borderColor: "hsla(0,91%,71%,.1)",
          blurEffectBgColor: "rgb(225 29 72/1)",
          cvssChipStyles: {
            color: "rgb(248 113 113/1)",
            bgcolor: "rgba(239,68,68,.2)",
            dividerBgColor: "rgb(225 29 72/1)",
          },
        };
      case "low":
        return {
          bgcolor: "rgba(99,102,241,.2)",
          color: "rgb(99 102 241/1)",
          borderColor: "rgba(199,210,254,.1)",
          blurEffectBgColor: "rgb(99 102 241/1)",
          cvssChipStyles: {
            color: "rgb(110 110 255/1)",
            bgcolor: "rgb(117 162 237/.2)",
            dividerBgColor: "rgb(99 102 241/1)",
          },
        };
      case "unknown":
        return {
          bgcolor: "#131316",
          color: "#3f3f46",
          borderColor: "#262629",
          blurEffectBgColor: "unset",
          cvssChipStyles: {
            color: "unset",
            bgcolor: "unset",
            dividerBgColor: "unset",
          },
        };
    }
  };

  return (
    <Box
      border="1px solid #2a2a2b"
      sx={{
        borderStartEndRadius: index === 0 ? "8px" : "0",
        borderStartStartRadius: index === 0 ? "8px" : "0",
        borderEndStartRadius: index === length ? "8px" : "0",
        borderEndEndRadius: index === length ? "8px" : "0",
        borderBottom: index === length ? "1px solid #2a2a2b" : "none",
        overflow: "hidden",
        position: "relative",
        cursor: "pointer",
      }}
    >
      {/* blur effect */}
      <Box
        position="absolute"
        left="-10px"
        top="-10px"
        width="80px"
        height="70px"
        bgcolor={levelChipStyles().blurEffectBgColor}
        borderRadius="9999px"
        boxSizing="border-box"
        sx={{
          opacity: 0.5,
          filter: "blur(65px)",
        }}
      />
      <Box
        height="100%"
        display="flex"
        p="15px"
        boxSizing="border-box"
        bgcolor="#0d0d0f"
        sx={{
          "&:hover": {
            bgcolor: "#141416",
            "& .time_text": { color: "#747475" },
            "& .auther_text": { color: "#e5e5e5" },
            "& .scan-icon": { color: "#e5e5e5 !important" },
            "& .scan_container": { maxWidth: "140px" },
          },
          transition: "all ease-in 100ms",
        }}
      >
        {/* level & main tag */}
        <Box height="100%" flex={0.4} maxWidth="260px">
          <Box display="flex" alignItems="start">
            {/* level */}
            <Box width="100px">
              <Box
                width="fit-content"
                borderRadius="9999px"
                px="10px"
                py="3px"
                bgcolor={levelChipStyles().bgcolor}
                sx={{
                  borderWidth: "1px",
                  borderStyle: "solid",
                  borderColor: levelChipStyles().borderColor,
                }}
              >
                <Typography
                  variant="subtitle2"
                  sx={{
                    color: levelChipStyles().color,
                    fontSize: "13px",
                    fontFamily: "consolas",
                    fontWeight: 400,
                  }}
                >
                  {level.toUpperCase()}
                </Typography>
              </Box>
            </Box>
            {/* main tag */}
            <CustomTooltip
              title={
                <Box sx={{ py: "1px" }} display="flex" alignItems="center">
                  <Typography variant="subtitle2" sx={{ fontSize: "12px" }}>
                    {mainTag}
                  </Typography>
                </Box>
              }
              placement="top"
            >
              <Box
                className="main-tag__container"
                bgcolor="#100f0f"
                border="1px solid #272729"
                borderRadius="9999px"
                px="12px"
                py="4px"
                maxWidth="120px"
                overflow="hidden"
                textOverflow="ellipsis"
                whiteSpace="nowrap"
                display="flex"
                alignItems="center"
              >
                <Typography
                  className="main-tag_text"
                  variant="subtitle2"
                  sx={{
                    color: "#ababaa",
                    fontSize: "13px",
                    fontFamily: "consolas",
                  }}
                >
                  {mainTag}
                </Typography>
              </Box>
            </CustomTooltip>
          </Box>
        </Box>
        {/* title & tags & description */}
        <Box height="100%" flex={1}>
          <Box
            display="flex"
            flexDirection="column"
            pl="10px"
            boxSizing="border-box"
          >
            {/* title */}
            <Box pt="2px">
              <Box>
                <Typography
                  variant="subtitle2"
                  className="title_text"
                  sx={{
                    color: "hsla(0,0%,93%,.9)",
                    fontSize: "14px",
                    fontWeight: 500,
                    letterSpacing: 0.5,
                  }}
                >
                  {title}
                </Typography>
              </Box>
            </Box>
            {/* tags */}
            <Box pt="6px">
              <Box display="flex">
                {tags.map((t) => (
                  <Box key={getUniqueKey()} display="flex" gap="5px">
                    {/* status chip */}
                    {t.status && (
                      <CustomTooltip
                        title={
                          <Box maxWidth="180px" boxSizing="border-box">
                            <Typography
                              variant="subtitle1"
                              sx={{
                                color: "#d7d7d8",
                                fontSize: { xs: ".6rem", lg: "10.5px" },
                                lineHeight: "14px",
                              }}
                            >
                              Unreleased templates are reviewed and approved but
                              not yet released to everyone in open-source. These
                              are available for real-time scans by subscribed
                              users.
                            </Typography>
                          </Box>
                        }
                        placement="top"
                      >
                        <Box
                          bgcolor="#27272a"
                          borderRadius="9999px"
                          px="7px"
                          display="flex"
                          justifyContent="center"
                          alignItems="center"
                          sx={{ cursor: "pointer" }}
                        >
                          <Typography
                            variant="subtitle2"
                            sx={{
                              color: "rgb(156 163 175/1)",
                              letterSpacing: "0.05em",
                              fontWeight: 400,
                              fontSize: "12px",
                              fontFamily: "consolas",
                            }}
                          >
                            {t.status}
                          </Typography>
                        </Box>
                      </CustomTooltip>
                    )}
                    {/* product chip */}
                    {t.product && (
                      <CustomTooltip
                        title={
                          <Box
                            py="4px"
                            boxSizing="border-box"
                            textOverflow="ellipsis"
                            overflow="hidden"
                            whiteSpace="nowrap"
                          >
                            <Typography
                              variant="subtitle1"
                              sx={{
                                color: "#d7d7d8",
                                fontSize: "11px",
                                lineHeight: "14px",
                              }}
                            >
                              Product: {t.product}
                            </Typography>
                          </Box>
                        }
                        placement="top"
                      >
                        <Box
                          overflow="hidden"
                          textOverflow="ellipsis"
                          whiteSpace="nowrap"
                          bgcolor="rgba(75,211,253,.1)"
                          borderRadius="9999px"
                          px="7px"
                          display="flex"
                          justifyContent="center"
                          alignItems="center"
                          sx={{ cursor: "pointer" }}
                        >
                          <Typography
                            variant="subtitle2"
                            sx={{
                              color: "rgb(75 211 253/1)",
                              letterSpacing: "0.05em",
                              fontWeight: 400,
                              fontSize: "10px",
                              fontFamily: "consolas",
                            }}
                          >
                            {t.product.toUpperCase()}
                          </Typography>
                        </Box>
                      </CustomTooltip>
                    )}
                    {/* cvssScore chip */}
                    {t.cvssScore && (
                      <CustomTooltip
                        title={
                          <Box
                            py="4px"
                            boxSizing="border-box"
                            textOverflow="ellipsis"
                            overflow="hidden"
                            whiteSpace="nowrap"
                          >
                            <Typography
                              variant="subtitle1"
                              sx={{
                                color: "#d7d7d8",
                                fontSize: "13px",
                                lineHeight: "14px",
                              }}
                            >
                              CVSS Score
                            </Typography>
                          </Box>
                        }
                        placement="top"
                      >
                        <Box
                          bgcolor={levelChipStyles().cvssChipStyles.bgcolor}
                          borderRadius="9999px"
                          px="7px"
                          display="flex"
                          justifyContent="center"
                          alignItems="center"
                          sx={{ cursor: "pointer" }}
                          maxHeight="18px"
                          overflow="hidden"
                        >
                          <Typography
                            variant="subtitle2"
                            sx={{
                              color: levelChipStyles().cvssChipStyles.color,
                              letterSpacing: "0.05em",
                              fontWeight: 400,
                              fontSize: "10px",
                              fontFamily: "consolas",
                            }}
                          >
                            <Box display="flex" alignItems="center">
                              CVSS&nbsp;
                              <Box
                                bgcolor={
                                  levelChipStyles().cvssChipStyles
                                    .dividerBgColor
                                }
                                width="1px"
                                height="18px"
                                sx={{ opacity: 0.4 }}
                              />
                              &nbsp;
                              {t.cvssScore}
                            </Box>
                          </Typography>
                        </Box>
                      </CustomTooltip>
                    )}
                    {/* epssScore chip */}
                    {t.epssScore && (
                      <CustomTooltip
                        title={
                          <Box
                            py="4px"
                            boxSizing="border-box"
                            textOverflow="ellipsis"
                            overflow="hidden"
                            whiteSpace="nowrap"
                          >
                            <Typography
                              variant="subtitle1"
                              sx={{
                                color: "#d7d7d8",
                                fontSize: "13px",
                                lineHeight: "14px",
                              }}
                            >
                              EPSS Score
                            </Typography>
                          </Box>
                        }
                        placement="top"
                      >
                        <Box
                          bgcolor="rgba(129,140,248,.1)"
                          borderRadius="9999px"
                          px="7px"
                          display="flex"
                          justifyContent="center"
                          alignItems="center"
                          sx={{ cursor: "pointer" }}
                          maxHeight="18px"
                          overflow="hidden"
                        >
                          <Typography
                            variant="subtitle2"
                            sx={{
                              color: "rgb(129 140 248/1)",
                              letterSpacing: "0.05em",
                              fontWeight: 400,
                              fontSize: "10px",
                              fontFamily: "consolas",
                            }}
                          >
                            <Box display="flex" alignItems="center">
                              EPSS&nbsp;
                              <Box
                                bgcolor="rgb(99 102 241/1)"
                                width=".5px"
                                height="18px"
                                sx={{ opacity: 0.4 }}
                              />
                              &nbsp;
                              {t.epssScore}
                            </Box>
                          </Typography>
                        </Box>
                      </CustomTooltip>
                    )}
                  </Box>
                ))}
              </Box>
            </Box>
            {/* description */}
            <Box pt="4px" pr="60px" boxSizing="border-box">
              {description && (
                <Typography
                  variant="subtitle1"
                  sx={{ color: "#666d7a", fontSize: 13, letterSpacing: 0.5 }}
                >
                  {description}
                </Typography>
              )}
            </Box>
          </Box>
        </Box>
        {/* time & auther & scan */}
        <Box
          height="100%"
          flex={0.5}
          overflow="hidden"
          textOverflow="ellipsis"
          whiteSpace="nowrap"
        >
          <Box display="flex" alignItems="start" justifyContent="end">
            {/* time & auther */}
            <Box
              display="flex"
              alignItems="start"
              mr="25px"
              overflow="hidden"
              textOverflow="ellipsis"
              whiteSpace="nowrap"
              maxWidth="200px"
            >
              {/* time */}
              <Box>
                <Typography
                  className="time_text"
                  variant="subtitle2"
                  sx={{
                    color: "#6b7280",
                    fontSize: "13px",
                    letterSpacing: 0.5,
                  }}
                >
                  Added {time} ago by&nbsp;
                </Typography>
              </Box>
              {/* auther */}
              <CustomTooltip
                title={
                  <Box
                    maxWidth="180px"
                    py="3px"
                    px="2px"
                    boxSizing="border-box"
                  >
                    <Typography
                      variant="subtitle1"
                      sx={{
                        color: "#f4f4f5",
                        fontSize: "12px",
                        lineHeight: "14px",
                      }}
                    >
                      @{auther}
                    </Typography>
                  </Box>
                }
                placement="top"
              >
                <Box
                  sx={{
                    cursor: "pointer",
                  }}
                >
                  <Typography
                    className="auther_text"
                    variant="subtitle2"
                    sx={{
                      color: "#6b7280",
                      fontSize: "13px",
                      letterSpacing: 0.5,
                    }}
                  >
                    @{auther}
                  </Typography>
                </Box>
              </CustomTooltip>
            </Box>
            {/* scan */}
            <Box
              className="scan_container"
              maxWidth="0"
              sx={{ transition: "all ease-in 230ms" }}
            >
              <Button
                component={motion.button}
                color="primary"
                initial={{
                  scale: 1,
                }}
                whileHover={{
                  scale: 1.1,
                }}
                sx={{
                  px: "8px",
                  py: "4px",
                  m: 0,
                  minWidth: 0,
                  textTransform: "none",
                  bgcolor: "#171717",
                  border: "1px solid #333333",
                  borderRadius: "7px",
                  "&:hover": {
                    bgcolor: "#6366f1",
                    "& .scan-icon": {
                      color: "#fafaff !important",
                    },
                    "& .scan-text": {
                      color: "#fafafa",
                    },
                  },
                }}
              >
                <Box display="flex" alignItems="center" gap="5px">
                  {/* icon */}
                  <Box display="flex" alignItems="center">
                    <RiEditCircleLine
                      className="scan-icon"
                      size={17}
                      color="#a1a1aa"
                    />
                  </Box>
                  {/* text */}
                  <Box>
                    <Typography
                      className="scan-text"
                      variant="subtitle2"
                      sx={{ color: "#a1a1aa", fontSize: "11px" }}
                    >
                      Scan
                    </Typography>
                  </Box>
                </Box>
              </Button>
            </Box>
          </Box>
        </Box>
      </Box>
    </Box>
  );
};

export default VulnerabilityCard;
